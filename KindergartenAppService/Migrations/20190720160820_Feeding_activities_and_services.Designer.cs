// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190720160820_Feeding_activities_and_services")]
    partial class Feeding_activities_and_services
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d02ba95-2231-4b6b-8094-d5aae15fa41f"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        },
                        new
                        {
                            Id = new Guid("ed4f41ab-0a86-4d96-a977-6a7585b2c6b9"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        },
                        new
                        {
                            Id = new Guid("0976b125-869c-4514-8398-0c685f42af1c"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        },
                        new
                        {
                            Id = new Guid("088bae7b-0dff-4c36-8aa5-06e0777dc4e9"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        },
                        new
                        {
                            Id = new Guid("17f1044a-a62e-4d44-a0b4-6a83d15df146"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        },
                        new
                        {
                            Id = new Guid("47e8bfd9-2a90-40f5-880c-68ec886e293e"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference");

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00d90097-053a-4235-b309-0e177d9ad80b"),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("02460234-85ac-44a4-b8a8-82159381c297"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("02de298b-1c68-4b0c-b4c7-bd2692f72db9"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Worm",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("032525ca-feed-4c0f-a39c-f5e70bc6ad2f"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Washinton",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("0507c91b-c5d2-470a-acd4-0502448131fc"),
                            FatherName = "Stackeetam",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("064e00c2-2e2e-4c5a-ae65-434fceda49dd"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Washinton",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("078a8b7d-985c-435b-967d-d249ad5aaf33"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("07e402e8-ac87-42cc-9468-85cda5cf3f85"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("0a11fd30-e556-40a8-9a51-c5debc94e378"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        },
                        new
                        {
                            Id = new Guid("0b2dd5c2-33bc-4bcd-be0a-ed693f99b398"),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("24841f2f-706a-4248-9bad-054093f2362f")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ddd6a6e-eb88-4cef-84a7-15229eb96bba"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24841f2f-706a-4248-9bad-054093f2362f"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("d43278e6-2b6e-4d49-9b2e-ffb9a9db7b66"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4bbeff6-581e-42cb-863e-c985accbe844"),
                            Price = 4779m,
                            Reference = "SRV-154",
                            ActivityId = new Guid("4d02ba95-2231-4b6b-8094-d5aae15fa41f"),
                            Description = "Service Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("8dcac50d-6a28-4a7f-88d5-f76ce01d0529"),
                            Price = 5173m,
                            Reference = "SRV-632",
                            ActivityId = new Guid("ed4f41ab-0a86-4d96-a977-6a7585b2c6b9"),
                            Description = "Service Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("462bc18f-3136-4751-9ea3-e30e580fbcfd"),
                            Price = 8471m,
                            Reference = "SRV-134",
                            ActivityId = new Guid("0976b125-869c-4514-8398-0c685f42af1c"),
                            Description = "Service Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("553a0c12-0a06-4f8c-961b-b9c3292cdebe"),
                            Price = 8859m,
                            Reference = "SRV-394",
                            ActivityId = new Guid("088bae7b-0dff-4c36-8aa5-06e0777dc4e9"),
                            Description = "Service Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("cb010801-bc46-4d75-a3da-f9a98aae009a"),
                            Price = 4589m,
                            Reference = "SRV-232",
                            ActivityId = new Guid("17f1044a-a62e-4d44-a0b4-6a83d15df146"),
                            Description = "Service Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("6eb1ae54-38ce-4735-88cd-8b2480b8d959"),
                            Price = 8531m,
                            Reference = "SRV-532",
                            ActivityId = new Guid("47e8bfd9-2a90-40f5-880c-68ec886e293e"),
                            Description = "Service Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Activities")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
