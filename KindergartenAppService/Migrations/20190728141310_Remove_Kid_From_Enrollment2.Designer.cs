// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190728141310_Remove_Kid_From_Enrollment2")]
    partial class Remove_Kid_From_Enrollment2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e226d3a-c94b-4aa0-b50b-9d0295200b15"),
                            ActivityTemplateId = new Guid("0b2a7258-05b7-42cb-a584-9fc4b2a36d17"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("1f3952ac-0b44-48d5-8684-52929da87847"),
                            ActivityTemplateId = new Guid("4abf1d2a-41a8-4330-a609-2bdbc8a696bf"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("6a31a49d-32d1-486f-bbb9-ba4d1e058802"),
                            ActivityTemplateId = new Guid("8407a9af-5fba-45a9-8ab8-8266b2a1d09f"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("da7bc6bd-7ea0-488e-940a-449f60cbfc6f"),
                            ActivityTemplateId = new Guid("85a941c9-f595-4422-a5b1-fbd5954917de"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("54a130c5-6eb2-46cc-879f-9f82aa531ed1"),
                            ActivityTemplateId = new Guid("5785aa8f-1a4d-4197-8b85-e35fc82feebb"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("7717b8eb-c6fd-4f8b-9fe1-7e88ee69d58b"),
                            ActivityTemplateId = new Guid("80383969-f1e4-44ff-95d9-5a239f90cf39"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b2a7258-05b7-42cb-a584-9fc4b2a36d17"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        },
                        new
                        {
                            Id = new Guid("4abf1d2a-41a8-4330-a609-2bdbc8a696bf"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        },
                        new
                        {
                            Id = new Guid("8407a9af-5fba-45a9-8ab8-8266b2a1d09f"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        },
                        new
                        {
                            Id = new Guid("85a941c9-f595-4422-a5b1-fbd5954917de"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        },
                        new
                        {
                            Id = new Guid("5785aa8f-1a4d-4197-8b85-e35fc82feebb"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        },
                        new
                        {
                            Id = new Guid("80383969-f1e4-44ff-95d9-5a239f90cf39"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollDay");

                    b.HasKey("Id");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("007e2185-6f93-45a2-8b38-13c236389e5f"),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("00d8a236-0426-401d-a559-d7b0e8b4164b"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Worm",
                            SecondName = "Carlos",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("01b7914f-5f76-455f-9e14-5649026ce7d3"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "White",
                            SecondName = "Carlos",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("0233d672-3349-4571-9a2f-b8165e0f1845"),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("028b2819-fdcb-4232-a70a-67a44a30fbbc"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("03041a55-d5f4-4b23-88ff-3ef414444ebc"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Worm",
                            SecondName = "Enrique",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("044d1c2d-6ac5-4ec9-8a2e-10a94fcb3bcb"),
                            FatherName = "Stackeetam",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Washinton",
                            SecondName = "Emilio",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("04511344-55bc-4dd5-a962-43887c721126"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("04644465-92b1-42cb-abcd-aecc54fa1433"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        },
                        new
                        {
                            Id = new Guid("068a3fc5-958f-4dfc-b631-90d9b507382c"),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a039392-f92e-41ca-ac56-adf596ac9f8c"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed6c6dec-edc0-4f26-ab73-ce3f444b12a5"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("3bf12ded-29bf-40b4-9f28-8a0574663d21"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16f1d5df-2076-4877-8eae-1ac7a68e49a7"),
                            Price = 6616m,
                            Reference = "SRV-877",
                            ActivityId = new Guid("0e226d3a-c94b-4aa0-b50b-9d0295200b15"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("bf2f6d16-059b-43e8-b1ff-4f2294da7cb8"),
                            Price = 7075m,
                            Reference = "SRV-909",
                            ActivityId = new Guid("1f3952ac-0b44-48d5-8684-52929da87847"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("bd5cc008-8d1b-449e-8b1f-ffadfc9a2c4b"),
                            Price = 6865m,
                            Reference = "SRV-923",
                            ActivityId = new Guid("6a31a49d-32d1-486f-bbb9-ba4d1e058802"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("2397a279-4ed1-4e5f-8193-a177595ae197"),
                            Price = 2836m,
                            Reference = "SRV-13",
                            ActivityId = new Guid("da7bc6bd-7ea0-488e-940a-449f60cbfc6f"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("c3f3f4cb-b479-41a3-a914-c7b687248d00"),
                            Price = 7515m,
                            Reference = "SRV-670",
                            ActivityId = new Guid("54a130c5-6eb2-46cc-879f-9f82aa531ed1"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("b20721d8-495a-40f7-a9d9-26a408f6ee36"),
                            Price = 8702m,
                            Reference = "SRV-67",
                            ActivityId = new Guid("7717b8eb-c6fd-4f8b-9fe1-7e88ee69d58b"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
