// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190805210338_Adding_TShirtSize_to_Kid")]
    partial class Adding_TShirtSize_to_Kid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfc72c08-1567-4da0-948f-154949506e7f"),
                            ActivityTemplateId = new Guid("864fd426-bb3b-458a-b429-71757a90c8fd"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("45ac2cbb-d47f-48ab-8f27-d0aa149a9455"),
                            ActivityTemplateId = new Guid("7b62b015-517f-42d0-a250-92371711e610"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("6606bc3c-136c-46fc-965e-50d405d3c8bb"),
                            ActivityTemplateId = new Guid("1cf0bf9e-2bc0-45ef-b120-cdaaa4f64d60"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("f928027e-f5ed-401b-8e93-59caa2de5338"),
                            ActivityTemplateId = new Guid("c6138c54-ef19-45e4-b8cd-4017b629b49b"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("c798d23c-2ae7-4da7-9c2d-232d4eb9c95d"),
                            ActivityTemplateId = new Guid("7585b91e-b1e4-4926-92ad-9e9c537e3628"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("42a053db-c47c-4a51-bdbd-32353fc8fa74"),
                            ActivityTemplateId = new Guid("66b72d6a-7eb0-4b9b-91e3-762f75b60594"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("864fd426-bb3b-458a-b429-71757a90c8fd"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        },
                        new
                        {
                            Id = new Guid("7b62b015-517f-42d0-a250-92371711e610"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        },
                        new
                        {
                            Id = new Guid("1cf0bf9e-2bc0-45ef-b120-cdaaa4f64d60"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        },
                        new
                        {
                            Id = new Guid("c6138c54-ef19-45e4-b8cd-4017b629b49b"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        },
                        new
                        {
                            Id = new Guid("7585b91e-b1e4-4926-92ad-9e9c537e3628"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        },
                        new
                        {
                            Id = new Guid("66b72d6a-7eb0-4b9b-91e3-762f75b60594"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb429747-f614-4c79-b79a-67e01710be93"),
                            ActivityId = new Guid("6606bc3c-136c-46fc-965e-50d405d3c8bb"),
                            EnrollmentId = new Guid("5ae4fd1a-e858-485a-9497-0bfe176f6f69")
                        },
                        new
                        {
                            Id = new Guid("34f3c006-0f9e-44ab-b170-600a44425ea6"),
                            ActivityId = new Guid("45ac2cbb-d47f-48ab-8f27-d0aa149a9455"),
                            EnrollmentId = new Guid("92dfe308-94bb-49e7-af7e-17394c35454d")
                        },
                        new
                        {
                            Id = new Guid("7ad46170-c929-4a9c-876e-0467eab58767"),
                            ActivityId = new Guid("6606bc3c-136c-46fc-965e-50d405d3c8bb"),
                            EnrollmentId = new Guid("95ffc573-12b9-416e-b323-971d348fe707")
                        },
                        new
                        {
                            Id = new Guid("601cf899-35d0-4fd0-b7c6-62737b4f1d44"),
                            ActivityId = new Guid("6606bc3c-136c-46fc-965e-50d405d3c8bb"),
                            EnrollmentId = new Guid("ec5d94dd-4111-47a4-82be-092fd55ff927")
                        },
                        new
                        {
                            Id = new Guid("21c4c6cf-4b16-4454-b646-a434d7cbd142"),
                            ActivityId = new Guid("c798d23c-2ae7-4da7-9c2d-232d4eb9c95d"),
                            EnrollmentId = new Guid("5976976c-62f1-44ec-9440-3c2521536c34")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ae4fd1a-e858-485a-9497-0bfe176f6f69"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0011bf63-6361-4add-a0e9-b0246c37d5d8")
                        },
                        new
                        {
                            Id = new Guid("92dfe308-94bb-49e7-af7e-17394c35454d"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("01101aa7-48cf-4837-8e0d-43c0d2e5124f")
                        },
                        new
                        {
                            Id = new Guid("95ffc573-12b9-416e-b323-971d348fe707"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("012fb48d-3ddd-4165-bbb2-78b2ce0c1277")
                        },
                        new
                        {
                            Id = new Guid("ec5d94dd-4111-47a4-82be-092fd55ff927"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0247636c-21ba-46e1-a1f0-7312991b13c7")
                        },
                        new
                        {
                            Id = new Guid("5976976c-62f1-44ec-9440-3c2521536c34"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("046fe88d-ab29-4b90-bd25-895cc7f6c83c")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Diseases");

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FavoriteActivities");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<int>("Sex");

                    b.Property<int>("SiblingCount");

                    b.Property<int>("TShirtSize");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0011bf63-6361-4add-a0e9-b0246c37d5d8"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "White",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("01101aa7-48cf-4837-8e0d-43c0d2e5124f"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("012fb48d-3ddd-4165-bbb2-78b2ce0c1277"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("0247636c-21ba-46e1-a1f0-7312991b13c7"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Johan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("046fe88d-ab29-4b90-bd25-895cc7f6c83c"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Johan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("0853539c-38ce-4ab7-847f-69b7b17ff028"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("09d75120-d6dd-4ac8-a3ae-467abfc00265"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("0ca8a160-9dd1-4899-b2e0-c5e437f61e37"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("0d051043-dc6f-43e6-8c93-eeb4ddb23701"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Snow",
                            SecondName = "Carlos",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        },
                        new
                        {
                            Id = new Guid("0e1dc6a7-b79b-43e1-a085-3c087865bd02"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            Sex = 0,
                            SiblingCount = 0,
                            TShirtSize = 0,
                            TutorId = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbf3402a-883f-49d7-8376-95fe307ee250"),
                            Description = "KPH"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("baa939fa-7f17-44b6-851d-c24aaf5c676d"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("ff49656f-3d11-4bc2-8c00-3db54943ece1"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b73e220-114a-47e1-991c-e335571d4fff"),
                            Price = 6955m,
                            Reference = "SRV-47",
                            ActivityId = new Guid("cfc72c08-1567-4da0-948f-154949506e7f"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("98a6ddbd-6cf1-487b-9bb4-029cb6756f68"),
                            Price = 6313m,
                            Reference = "SRV-283",
                            ActivityId = new Guid("45ac2cbb-d47f-48ab-8f27-d0aa149a9455"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("b5a0a086-68a1-4ee2-8e75-9ffcb3ce954f"),
                            Price = 1793m,
                            Reference = "SRV-376",
                            ActivityId = new Guid("6606bc3c-136c-46fc-965e-50d405d3c8bb"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("f95dfbed-9f8e-4f94-864d-dff62cce82a2"),
                            Price = 357m,
                            Reference = "SRV-981",
                            ActivityId = new Guid("f928027e-f5ed-401b-8e93-59caa2de5338"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("f4d5550c-8f27-4752-a6cb-95339efd2659"),
                            Price = 2921m,
                            Reference = "SRV-771",
                            ActivityId = new Guid("c798d23c-2ae7-4da7-9c2d-232d4eb9c95d"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("f3b61b66-5482-45d4-a29f-3df918f26514"),
                            Price = 1945m,
                            Reference = "SRV-760",
                            ActivityId = new Guid("42a053db-c47c-4a51-bdbd-32353fc8fa74"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment", "Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
