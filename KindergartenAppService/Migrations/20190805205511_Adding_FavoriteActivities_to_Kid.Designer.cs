// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190805205511_Adding_FavoriteActivities_to_Kid")]
    partial class Adding_FavoriteActivities_to_Kid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf3d24bc-38d3-4192-940e-0047bfc0d8ac"),
                            ActivityTemplateId = new Guid("3b62d539-7ffc-41ec-a780-ec4e77b1ce20"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("b7614181-f95d-4c79-88bb-953cd05e8cf8"),
                            ActivityTemplateId = new Guid("be91e60b-2969-457a-8def-6ced38b414d6"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("e85a6f41-6322-471f-b02d-502bbba378fc"),
                            ActivityTemplateId = new Guid("9a2812e8-6810-4b74-a60f-860ccc31e5c4"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("a995b2ac-a212-4ba6-925f-f8ed1028fe27"),
                            ActivityTemplateId = new Guid("8bf18490-06ac-4ef8-8e3a-d5ff13e3fd86"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("3251825f-8d74-45ef-94c4-8fdc7876024c"),
                            ActivityTemplateId = new Guid("9ad7bf47-9147-4a75-9e68-a2b113d43d60"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("d04c4313-77df-44ee-b660-209c45f05a54"),
                            ActivityTemplateId = new Guid("a43aa05f-797f-47ce-be68-1003dc3a113d"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b62d539-7ffc-41ec-a780-ec4e77b1ce20"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        },
                        new
                        {
                            Id = new Guid("be91e60b-2969-457a-8def-6ced38b414d6"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        },
                        new
                        {
                            Id = new Guid("9a2812e8-6810-4b74-a60f-860ccc31e5c4"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        },
                        new
                        {
                            Id = new Guid("8bf18490-06ac-4ef8-8e3a-d5ff13e3fd86"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        },
                        new
                        {
                            Id = new Guid("9ad7bf47-9147-4a75-9e68-a2b113d43d60"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        },
                        new
                        {
                            Id = new Guid("a43aa05f-797f-47ce-be68-1003dc3a113d"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd33f4a4-2acd-45f1-949f-d6c793db3236"),
                            ActivityId = new Guid("a995b2ac-a212-4ba6-925f-f8ed1028fe27"),
                            EnrollmentId = new Guid("a1cb17d8-df5f-4f78-baac-484c5fd3b763")
                        },
                        new
                        {
                            Id = new Guid("db5eccc3-9834-4df6-bb7c-714b90917597"),
                            ActivityId = new Guid("bf3d24bc-38d3-4192-940e-0047bfc0d8ac"),
                            EnrollmentId = new Guid("b5b5d820-a63c-4fc3-bbbd-24a61c171663")
                        },
                        new
                        {
                            Id = new Guid("b3ebae2f-a2b9-468f-83f0-edf2d561afb2"),
                            ActivityId = new Guid("bf3d24bc-38d3-4192-940e-0047bfc0d8ac"),
                            EnrollmentId = new Guid("94ee1898-2358-4619-85c6-8438bd5572aa")
                        },
                        new
                        {
                            Id = new Guid("6265ffd0-62e9-4d18-a6b7-d109182d51fe"),
                            ActivityId = new Guid("d04c4313-77df-44ee-b660-209c45f05a54"),
                            EnrollmentId = new Guid("a88db378-015e-4fc5-95db-40a26cd7aabd")
                        },
                        new
                        {
                            Id = new Guid("ffbf909e-88a2-438c-87db-6859e999b662"),
                            ActivityId = new Guid("d04c4313-77df-44ee-b660-209c45f05a54"),
                            EnrollmentId = new Guid("7e445422-4532-48ba-9fd7-585eac7e961e")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1cb17d8-df5f-4f78-baac-484c5fd3b763"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("01a3fef1-eaf7-41c4-9bd7-e908c30abda5")
                        },
                        new
                        {
                            Id = new Guid("b5b5d820-a63c-4fc3-bbbd-24a61c171663"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("05182b77-1f84-4b81-9e61-e75435b87fd1")
                        },
                        new
                        {
                            Id = new Guid("94ee1898-2358-4619-85c6-8438bd5572aa"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("056bba8a-98ec-4147-955f-5a3684927556")
                        },
                        new
                        {
                            Id = new Guid("a88db378-015e-4fc5-95db-40a26cd7aabd"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("05e13b0c-ea29-49d0-8795-a65c2a77934a")
                        },
                        new
                        {
                            Id = new Guid("7e445422-4532-48ba-9fd7-585eac7e961e"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("06547ee0-39e1-47f4-b10d-942e63ad3614")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FavoriteActivities");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01a3fef1-eaf7-41c4-9bd7-e908c30abda5"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("05182b77-1f84-4b81-9e61-e75435b87fd1"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Washinton",
                            SecondName = "Emilio",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("056bba8a-98ec-4147-955f-5a3684927556"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Washinton",
                            SecondName = "Enrique",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("05e13b0c-ea29-49d0-8795-a65c2a77934a"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("06547ee0-39e1-47f4-b10d-942e63ad3614"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Worm",
                            SecondName = "Emilio",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("065e0aa0-fdf1-43cf-9d7a-fd848657627b"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("08795253-b933-46b2-8865-385a4b4567d7"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("0900b090-199f-4b9d-9f01-15f325e9b5e8"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Johan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("090e53fd-9af6-49b5-a2a6-bc0948136e7f"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        },
                        new
                        {
                            Id = new Guid("0a1620c0-aba1-4786-a2cb-2b9d2ee1ec45"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1588cf77-df21-416c-a7d8-f8d402ebaab8"),
                            Description = "KPH"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1949de07-e92c-4897-892f-1f78be1dabf2"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("ca489c14-8eeb-46d3-8e06-13be3d48b00c"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b1b56f3-0b0e-469c-90e3-5e6f489270f8"),
                            Price = 2538m,
                            Reference = "SRV-422",
                            ActivityId = new Guid("bf3d24bc-38d3-4192-940e-0047bfc0d8ac"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("e1e882be-bdba-4c1b-9fb0-cff8492fe7fd"),
                            Price = 4776m,
                            Reference = "SRV-228",
                            ActivityId = new Guid("b7614181-f95d-4c79-88bb-953cd05e8cf8"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("72b3e906-da55-4b93-82dc-33e1a3dfce8e"),
                            Price = 1448m,
                            Reference = "SRV-987",
                            ActivityId = new Guid("e85a6f41-6322-471f-b02d-502bbba378fc"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("db1f8c8c-c980-4591-bd29-7f2b901e7610"),
                            Price = 892m,
                            Reference = "SRV-547",
                            ActivityId = new Guid("a995b2ac-a212-4ba6-925f-f8ed1028fe27"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("ec49407e-071f-47d7-8dab-13ea8210181e"),
                            Price = 4517m,
                            Reference = "SRV-802",
                            ActivityId = new Guid("3251825f-8d74-45ef-94c4-8fdc7876024c"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("9731ab1d-05f1-4a40-8408-9a45d40702be"),
                            Price = 3996m,
                            Reference = "SRV-821",
                            ActivityId = new Guid("d04c4313-77df-44ee-b660-209c45f05a54"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment", "Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
