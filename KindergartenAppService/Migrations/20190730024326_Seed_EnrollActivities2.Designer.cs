// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190730024326_Seed_EnrollActivities2")]
    partial class Seed_EnrollActivities2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("740385de-3583-4861-92b0-4920e2bf0b8b"),
                            ActivityTemplateId = new Guid("2c185253-07e4-4b67-8ea7-68c120165d1e"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("67ff4ae2-14ef-4579-abcb-5ebd3ff03564"),
                            ActivityTemplateId = new Guid("f5904279-0e34-4203-a421-7826723d7bcd"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("780a2f5b-f20f-47f8-8b99-95bd0ef78ba6"),
                            ActivityTemplateId = new Guid("e23f8c2b-0f11-405d-a3a8-736e7b9e70f8"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("a0975dcd-013a-4011-be7e-c835605fbe2f"),
                            ActivityTemplateId = new Guid("73a319c1-4f22-48b8-88c0-c7380101d2bd"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("e92ea0b6-2f8b-49a3-8e57-a9449221991c"),
                            ActivityTemplateId = new Guid("3d68df41-9e8f-4bf3-ad70-9463ba8e4b47"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("1255ca99-0286-45b7-8131-0c9809d486cc"),
                            ActivityTemplateId = new Guid("f6b42990-5c24-4a34-a83c-47ddab5ecaab"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c185253-07e4-4b67-8ea7-68c120165d1e"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        },
                        new
                        {
                            Id = new Guid("f5904279-0e34-4203-a421-7826723d7bcd"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        },
                        new
                        {
                            Id = new Guid("e23f8c2b-0f11-405d-a3a8-736e7b9e70f8"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        },
                        new
                        {
                            Id = new Guid("73a319c1-4f22-48b8-88c0-c7380101d2bd"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        },
                        new
                        {
                            Id = new Guid("3d68df41-9e8f-4bf3-ad70-9463ba8e4b47"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        },
                        new
                        {
                            Id = new Guid("f6b42990-5c24-4a34-a83c-47ddab5ecaab"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("311fe313-69a9-4fb4-9dce-afd047f007f8"),
                            ActivityId = new Guid("67ff4ae2-14ef-4579-abcb-5ebd3ff03564"),
                            EnrollmentId = new Guid("8aba2ecb-f2c6-45d0-b4ff-046655fcb66b")
                        },
                        new
                        {
                            Id = new Guid("a8f3286f-6dd0-4fcd-8d56-6e1734907a5d"),
                            ActivityId = new Guid("a0975dcd-013a-4011-be7e-c835605fbe2f"),
                            EnrollmentId = new Guid("f3716c08-e9f4-44a3-8e77-e69dc0a48f64")
                        },
                        new
                        {
                            Id = new Guid("40d2a86f-f552-4f83-8930-bcfbdb34037f"),
                            ActivityId = new Guid("740385de-3583-4861-92b0-4920e2bf0b8b"),
                            EnrollmentId = new Guid("8dc70026-8315-4c19-8330-e869bc58200f")
                        },
                        new
                        {
                            Id = new Guid("ff62299d-9468-43c7-9fca-36901103f674"),
                            ActivityId = new Guid("e92ea0b6-2f8b-49a3-8e57-a9449221991c"),
                            EnrollmentId = new Guid("122e3dd0-e5b0-45d8-bd07-773727cc1159")
                        },
                        new
                        {
                            Id = new Guid("80b45bc0-f81e-49bd-911d-8cd02a85b67e"),
                            ActivityId = new Guid("a0975dcd-013a-4011-be7e-c835605fbe2f"),
                            EnrollmentId = new Guid("946241c5-b152-4578-996c-6770904bebb1")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8aba2ecb-f2c6-45d0-b4ff-046655fcb66b"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("009767eb-8dee-4bae-b1e3-c66e748d2f17")
                        },
                        new
                        {
                            Id = new Guid("f3716c08-e9f4-44a3-8e77-e69dc0a48f64"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("00f813af-3599-4607-9d37-d86f3d843131")
                        },
                        new
                        {
                            Id = new Guid("8dc70026-8315-4c19-8330-e869bc58200f"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("017fdc4c-dcc7-4b2a-be40-a1e79651c219")
                        },
                        new
                        {
                            Id = new Guid("122e3dd0-e5b0-45d8-bd07-773727cc1159"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("02082e23-902f-4752-bb85-9e8c3d411e71")
                        },
                        new
                        {
                            Id = new Guid("946241c5-b152-4578-996c-6770904bebb1"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("02dfa196-6800-4fd3-a7fd-c457cc49e903")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("009767eb-8dee-4bae-b1e3-c66e748d2f17"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("00f813af-3599-4607-9d37-d86f3d843131"),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("017fdc4c-dcc7-4b2a-be40-a1e79651c219"),
                            FatherName = "Faringtom",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("02082e23-902f-4752-bb85-9e8c3d411e71"),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("02dfa196-6800-4fd3-a7fd-c457cc49e903"),
                            FatherName = "Lee",
                            FirstName = "Johan",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Snow",
                            SecondName = "Carlos",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("02f1f338-42ac-4981-9ebe-d8a3a7d9086d"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("049ffa96-ccbc-4c1e-9f2c-7c1ba3c21079"),
                            FatherName = "Stackeetam",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("04db3ddf-ef67-4da7-be26-72e7ff4d4b10"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("05765a28-4a48-4835-86a4-b42bb638a42f"),
                            FatherName = "Faringtom",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "Worm",
                            SecondName = "Carlos",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        },
                        new
                        {
                            Id = new Guid("058d1c8e-481a-46da-8879-72a9132b09c0"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcba11e2-6214-49c3-acf9-0440b7860b1d"),
                            Description = "KPH"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92ab4f1a-2d77-45e2-81e5-2484c1822937"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("38e2c50f-85a6-4389-84f2-faf2d44f6fc4"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad54e781-a041-4b66-aef7-620674830f07"),
                            Price = 5377m,
                            Reference = "SRV-907",
                            ActivityId = new Guid("740385de-3583-4861-92b0-4920e2bf0b8b"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("1274c751-e505-4ce9-afaf-58b93fc1a163"),
                            Price = 9377m,
                            Reference = "SRV-386",
                            ActivityId = new Guid("67ff4ae2-14ef-4579-abcb-5ebd3ff03564"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("36b091b9-a0c1-4dc0-a86f-43fceaecafc2"),
                            Price = 8049m,
                            Reference = "SRV-979",
                            ActivityId = new Guid("780a2f5b-f20f-47f8-8b99-95bd0ef78ba6"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("3d38774e-1aad-42b5-982a-62e5a68226c6"),
                            Price = 7094m,
                            Reference = "SRV-545",
                            ActivityId = new Guid("a0975dcd-013a-4011-be7e-c835605fbe2f"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("7c84ef8d-e8d1-4c0c-982e-b477acd01441"),
                            Price = 4397m,
                            Reference = "SRV-232",
                            ActivityId = new Guid("e92ea0b6-2f8b-49a3-8e57-a9449221991c"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("7530f576-cffa-4cbb-81f8-bde60c7dfec0"),
                            Price = 3211m,
                            Reference = "SRV-584",
                            ActivityId = new Guid("1255ca99-0286-45b7-8131-0c9809d486cc"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment", "Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
