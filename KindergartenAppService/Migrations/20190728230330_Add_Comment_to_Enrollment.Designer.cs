// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190728230330_Add_Comment_to_Enrollment")]
    partial class Add_Comment_to_Enrollment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5de7a0a-8290-48dc-9db3-7281e9efcfb2"),
                            ActivityTemplateId = new Guid("b3640ad7-3e76-46a4-9267-f55987080873"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("8568b490-d4b2-4d88-8954-0c7d2fd60e13"),
                            ActivityTemplateId = new Guid("d186fcc9-2f8e-401e-acf6-bff58a3741f2"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("64d345f8-1ba6-45eb-9076-36828660ce9b"),
                            ActivityTemplateId = new Guid("d2006162-bfa7-43fc-b7ef-f7f8f87dfa33"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("2bdc425a-fedc-4aad-9cef-971dd27cac7b"),
                            ActivityTemplateId = new Guid("7efbbf3a-6c04-466c-a74c-54a5f328293d"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("c4c825cb-0aee-4d27-814e-98661d22f926"),
                            ActivityTemplateId = new Guid("bee0237a-aa13-4f53-8229-35773d1cc277"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("c3a347e8-d6fb-4b30-90a6-472f7f2d37b8"),
                            ActivityTemplateId = new Guid("4e3bebd4-7322-4b81-af94-48ea98600b0c"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3640ad7-3e76-46a4-9267-f55987080873"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        },
                        new
                        {
                            Id = new Guid("d186fcc9-2f8e-401e-acf6-bff58a3741f2"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        },
                        new
                        {
                            Id = new Guid("d2006162-bfa7-43fc-b7ef-f7f8f87dfa33"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        },
                        new
                        {
                            Id = new Guid("7efbbf3a-6c04-466c-a74c-54a5f328293d"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        },
                        new
                        {
                            Id = new Guid("bee0237a-aa13-4f53-8229-35773d1cc277"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        },
                        new
                        {
                            Id = new Guid("4e3bebd4-7322-4b81-af94-48ea98600b0c"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8df1535b-fe95-4913-b7bc-18ebd3a88984"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("01f13d20-31f0-4bf4-ad42-f946eda593ed")
                        },
                        new
                        {
                            Id = new Guid("39eb909c-2ff6-4f7d-9393-f9c1d5f4d681"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("022cbe94-ee5c-467b-933b-2ccb1b07d8d0")
                        },
                        new
                        {
                            Id = new Guid("2b345b98-130b-47ca-94af-deb6305e495a"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("02690970-6295-4a09-b831-a0b82aa2e123")
                        },
                        new
                        {
                            Id = new Guid("9baddb84-3f3d-4709-898b-a1aae728b58f"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("033c8c83-b365-4ae1-a7de-65455b4ab950")
                        },
                        new
                        {
                            Id = new Guid("3128d1da-c9a9-4d74-9967-2277c327b78a"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("046903d7-0749-4a08-88c8-930b7ea431e9")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01f13d20-31f0-4bf4-ad42-f946eda593ed"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("022cbe94-ee5c-467b-933b-2ccb1b07d8d0"),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("02690970-6295-4a09-b831-a0b82aa2e123"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("033c8c83-b365-4ae1-a7de-65455b4ab950"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Worm",
                            SecondName = "Carlos",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("046903d7-0749-4a08-88c8-930b7ea431e9"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("0471bd25-ba55-4602-be30-0ec28f733969"),
                            FatherName = "Lee",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "White",
                            SecondName = "Emilio",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("048d2511-c55b-4803-b9ee-e3240e6bede4"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Worm",
                            SecondName = "Emilio",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("0675a1ce-94e4-4530-9211-8f4bc4e2d321"),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("07fc6563-788b-43d4-8f3b-94c4b817e11b"),
                            FatherName = "Faringtom",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        },
                        new
                        {
                            Id = new Guid("09a380f2-5c54-4589-9378-907270284fa7"),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6874815d-9a4e-4e0a-b3e7-0f4b03c69838"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99d8b713-7bf9-459a-9860-f0dfd937cdaf"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("f700b95f-119d-4605-acfc-9e2a2b35d628"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3cd256c-994b-46cf-8382-c5912d74e52e"),
                            Price = 5582m,
                            Reference = "SRV-537",
                            ActivityId = new Guid("e5de7a0a-8290-48dc-9db3-7281e9efcfb2"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("4cfa8938-20f8-4379-a9ff-c2bcf8bb418f"),
                            Price = 7862m,
                            Reference = "SRV-26",
                            ActivityId = new Guid("8568b490-d4b2-4d88-8954-0c7d2fd60e13"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("d2bf002d-b426-4457-8095-257c8291cd14"),
                            Price = 7132m,
                            Reference = "SRV-747",
                            ActivityId = new Guid("64d345f8-1ba6-45eb-9076-36828660ce9b"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("383209c0-cbc9-4082-b401-75102123650c"),
                            Price = 574m,
                            Reference = "SRV-874",
                            ActivityId = new Guid("2bdc425a-fedc-4aad-9cef-971dd27cac7b"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("6ce9c196-4866-48a7-afe8-03e859f62419"),
                            Price = 4733m,
                            Reference = "SRV-970",
                            ActivityId = new Guid("c4c825cb-0aee-4d27-814e-98661d22f926"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("207ffc57-aab6-4c24-bd89-4b057956db22"),
                            Price = 271m,
                            Reference = "SRV-472",
                            ActivityId = new Guid("c3a347e8-d6fb-4b30-90a6-472f7f2d37b8"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
