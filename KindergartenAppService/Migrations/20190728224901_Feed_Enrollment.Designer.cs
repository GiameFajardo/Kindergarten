// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190728224901_Feed_Enrollment")]
    partial class Feed_Enrollment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("747d5fac-17f7-416f-81e2-41a4d5e496b0"),
                            ActivityTemplateId = new Guid("ae805a83-0388-4fcb-b84d-07a0aee2dd95"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("9f54f57b-fe34-481c-9843-ea61ec4e754b"),
                            ActivityTemplateId = new Guid("65c3e282-bc12-430e-8249-f0ec13a3b461"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("631bffac-3544-46c0-bf7d-72a55b328168"),
                            ActivityTemplateId = new Guid("a971554e-f4eb-4242-8f35-d82bfcadc2a3"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("d8479cf2-ad34-46e4-b5cc-5f79cc3a2d2c"),
                            ActivityTemplateId = new Guid("e06b37a2-8c42-4521-8c01-45d846112960"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("12621cab-dc05-4974-ba4f-1c54d34ce21c"),
                            ActivityTemplateId = new Guid("ed9183e2-36c2-4923-88a5-eef879e27381"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("cc27ed0f-d030-48cf-8ac7-26bc35adfc12"),
                            ActivityTemplateId = new Guid("2b7c19c5-e250-4779-a398-024eb6971b7c"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae805a83-0388-4fcb-b84d-07a0aee2dd95"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        },
                        new
                        {
                            Id = new Guid("65c3e282-bc12-430e-8249-f0ec13a3b461"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        },
                        new
                        {
                            Id = new Guid("a971554e-f4eb-4242-8f35-d82bfcadc2a3"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        },
                        new
                        {
                            Id = new Guid("e06b37a2-8c42-4521-8c01-45d846112960"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        },
                        new
                        {
                            Id = new Guid("ed9183e2-36c2-4923-88a5-eef879e27381"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        },
                        new
                        {
                            Id = new Guid("2b7c19c5-e250-4779-a398-024eb6971b7c"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4dc927ae-7454-4f8e-a598-caae7501e5ec"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("00b5da96-c0a4-415c-a274-9dad288587b7")
                        },
                        new
                        {
                            Id = new Guid("3bf3ecc3-a918-4498-950c-0205922d0169"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0271773b-64a5-41ad-afab-67277133d40b")
                        },
                        new
                        {
                            Id = new Guid("4b56bd27-4723-4368-967f-99069d4dff00"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0290bfac-6b94-4847-ae48-d8f94a34568b")
                        },
                        new
                        {
                            Id = new Guid("f3506732-9953-49ff-b5b8-05c0561177ac"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0363ec8d-4c9f-46cc-8547-730f0e6fa2d3")
                        },
                        new
                        {
                            Id = new Guid("72a9cc41-2899-47c1-9337-0d2536372adf"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0457456d-ebc2-4e46-80d0-b827e109e005")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00b5da96-c0a4-415c-a274-9dad288587b7"),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0271773b-64a5-41ad-afab-67277133d40b"),
                            FatherName = "Escobar",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Worm",
                            SecondName = "Carlos",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0290bfac-6b94-4847-ae48-d8f94a34568b"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0363ec8d-4c9f-46cc-8547-730f0e6fa2d3"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0457456d-ebc2-4e46-80d0-b827e109e005"),
                            FatherName = "Escobar",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Washinton",
                            SecondName = "Emilio",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0508c7a7-99f9-4e0b-b952-4d948bb6b022"),
                            FatherName = "Lee",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0566fa33-b74f-4166-9bb4-7a35bce04834"),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("072874d2-027e-4a33-94a7-643cf2b52fb5"),
                            FatherName = "Stackeetam",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("0840cbe8-7f1f-483d-8a8f-9e3dc2b96c5b"),
                            FatherName = "Stackeetam",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        },
                        new
                        {
                            Id = new Guid("08b4a08f-5b04-48be-9ca8-13d8e9fa10a9"),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a3f922c-8571-4550-a306-b9baca7f8538"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb96ef58-0c95-43b8-a846-512ce825bf35"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("5e695c94-b864-492f-80e1-2cf3adbca27e"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82cb97d1-aab8-42a2-bfd6-c0ba02aaa241"),
                            Price = 1539m,
                            Reference = "SRV-777",
                            ActivityId = new Guid("747d5fac-17f7-416f-81e2-41a4d5e496b0"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("5e5f2602-f08e-4c0d-a996-492f28a6dcdd"),
                            Price = 6110m,
                            Reference = "SRV-380",
                            ActivityId = new Guid("9f54f57b-fe34-481c-9843-ea61ec4e754b"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("63d1ab26-28c1-4c60-8826-b3c34ba14ef0"),
                            Price = 147m,
                            Reference = "SRV-26",
                            ActivityId = new Guid("631bffac-3544-46c0-bf7d-72a55b328168"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("362ea5ed-ec46-4f3b-b291-8d3444c213e4"),
                            Price = 9827m,
                            Reference = "SRV-251",
                            ActivityId = new Guid("d8479cf2-ad34-46e4-b5cc-5f79cc3a2d2c"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("18ec49b9-60ec-4900-ac89-0773ba1642e9"),
                            Price = 6149m,
                            Reference = "SRV-837",
                            ActivityId = new Guid("12621cab-dc05-4974-ba4f-1c54d34ce21c"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("de3a3a4b-1613-428d-bdb3-f3b75102e8d5"),
                            Price = 8078m,
                            Reference = "SRV-941",
                            ActivityId = new Guid("cc27ed0f-d030-48cf-8ac7-26bc35adfc12"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
