// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190721215258_Some_changes_in_activities")]
    partial class Some_changes_in_activities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77993c94-1523-4890-85ab-d767bc87697f"),
                            ActivityTemplateId = new Guid("e9b0e1f4-23a9-4a6b-b621-4789522c6e5a"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("5a3d8aeb-9f95-4cac-91ca-08e751ac805a"),
                            ActivityTemplateId = new Guid("d2794bf3-8776-454c-b836-b0901151d011"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("c9f38097-4f54-4a57-b68d-d19e79d58374"),
                            ActivityTemplateId = new Guid("9183f68e-d32c-40dc-bbc8-ee99cc25107b"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("63323267-a10c-4bfb-9f22-c7d0f297fc73"),
                            ActivityTemplateId = new Guid("ab7c7726-ab62-4b8c-8749-b947b3b572cd"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("132fbefa-982f-4e27-98bb-2f846aae7176"),
                            ActivityTemplateId = new Guid("0807cc78-0ac6-4c88-b2b4-b01ca22cc149"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("a6c5ffd2-8103-4d8c-9c0a-2a46cdf9deae"),
                            ActivityTemplateId = new Guid("6a80c76c-f235-4e40-962e-38f32cf8bf52"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9b0e1f4-23a9-4a6b-b621-4789522c6e5a"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        },
                        new
                        {
                            Id = new Guid("d2794bf3-8776-454c-b836-b0901151d011"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        },
                        new
                        {
                            Id = new Guid("9183f68e-d32c-40dc-bbc8-ee99cc25107b"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        },
                        new
                        {
                            Id = new Guid("ab7c7726-ab62-4b8c-8749-b947b3b572cd"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        },
                        new
                        {
                            Id = new Guid("0807cc78-0ac6-4c88-b2b4-b01ca22cc149"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        },
                        new
                        {
                            Id = new Guid("6a80c76c-f235-4e40-962e-38f32cf8bf52"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0064873e-1568-4fb6-ad36-d4947d51497b"),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("011ac463-23d2-4fd2-b2f2-9cf61333b176"),
                            FatherName = "Escobar",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Washinton",
                            SecondName = "Eduardo",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("0165fb1f-703c-4b03-b0c0-ce98a20ae2fe"),
                            FatherName = "Escobar",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("030f1ddf-cc6e-4a1b-a282-14137325fcc8"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("03829b93-9356-4359-92f7-e675c2044627"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Worm",
                            SecondName = "Emilio",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("06447503-271f-4d84-a9c9-803b8479ccce"),
                            FatherName = "Faringtom",
                            FirstName = "Johan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("06d8e76e-336d-4e25-99d4-c5698a9bfea5"),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Washinton",
                            SecondName = "Carlos",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("06ec4a8a-0b2d-4a48-ac22-7dc668396980"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("07c18f9c-8129-46aa-bec4-daaffbdacd89"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        },
                        new
                        {
                            Id = new Guid("09e63d6a-15cd-41e9-a098-0ab11a02a45d"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("725cb50c-2249-4874-9449-40a4131d9af9")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d21e24a5-59fa-441f-a0f2-3a284e304315"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("725cb50c-2249-4874-9449-40a4131d9af9"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("cc873f7a-13a4-473d-bb8d-3bd345d17fea"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b4804a9-6d51-4496-b08c-a9f4fba035de"),
                            Price = 3920m,
                            Reference = "SRV-818",
                            ActivityId = new Guid("77993c94-1523-4890-85ab-d767bc87697f"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("2a05f3ea-83c8-4773-87ed-d86f09830227"),
                            Price = 260m,
                            Reference = "SRV-798",
                            ActivityId = new Guid("5a3d8aeb-9f95-4cac-91ca-08e751ac805a"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("de439620-81f6-4cfb-90ef-2953a2586300"),
                            Price = 5842m,
                            Reference = "SRV-262",
                            ActivityId = new Guid("c9f38097-4f54-4a57-b68d-d19e79d58374"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("1c43e6d1-1fff-4727-a10e-4eaa15939dbc"),
                            Price = 4141m,
                            Reference = "SRV-698",
                            ActivityId = new Guid("63323267-a10c-4bfb-9f22-c7d0f297fc73"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("4ff02c44-f7c0-4337-8b11-3cff4849820c"),
                            Price = 5229m,
                            Reference = "SRV-782",
                            ActivityId = new Guid("132fbefa-982f-4e27-98bb-2f846aae7176"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("f8db1edf-3e74-4103-925c-8c0d53885e63"),
                            Price = 6932m,
                            Reference = "SRV-4",
                            ActivityId = new Guid("a6c5ffd2-8103-4d8c-9c0a-2a46cdf9deae"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
