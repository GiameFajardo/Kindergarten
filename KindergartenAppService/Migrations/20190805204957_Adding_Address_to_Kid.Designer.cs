// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190805204957_Adding_Address_to_Kid")]
    partial class Adding_Address_to_Kid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17fa9bcf-8116-4eae-84b4-a80ac90b528d"),
                            ActivityTemplateId = new Guid("1b4db843-5320-4546-a515-e275b877501e"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("8a0347cd-5c63-4098-b9ad-7140bb393c0b"),
                            ActivityTemplateId = new Guid("6bc2fcd6-0d5f-422b-b919-d52d3c06a4b5"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("372a27eb-caa8-4b7d-ad43-c6acda4cbc80"),
                            ActivityTemplateId = new Guid("65cd530f-990d-49e2-ab15-e6ba0f748d8b"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("77bab25a-95e0-4262-a9f4-2b995f4aab45"),
                            ActivityTemplateId = new Guid("b0f5b438-6d53-4aee-bc82-b55c019893c1"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("20f84f55-799c-4952-b530-6fa9097d8d5f"),
                            ActivityTemplateId = new Guid("dd84798d-49d5-4dd5-a8b6-47601bd22d68"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("45af3b8f-c30c-44ef-aaea-4585a6242d9d"),
                            ActivityTemplateId = new Guid("15bba733-337b-4dc8-8090-67cfb1bcdd72"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b4db843-5320-4546-a515-e275b877501e"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        },
                        new
                        {
                            Id = new Guid("6bc2fcd6-0d5f-422b-b919-d52d3c06a4b5"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        },
                        new
                        {
                            Id = new Guid("65cd530f-990d-49e2-ab15-e6ba0f748d8b"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        },
                        new
                        {
                            Id = new Guid("b0f5b438-6d53-4aee-bc82-b55c019893c1"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        },
                        new
                        {
                            Id = new Guid("dd84798d-49d5-4dd5-a8b6-47601bd22d68"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        },
                        new
                        {
                            Id = new Guid("15bba733-337b-4dc8-8090-67cfb1bcdd72"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8574ff75-33ef-480d-ae3d-e5e30da3b305"),
                            ActivityId = new Guid("372a27eb-caa8-4b7d-ad43-c6acda4cbc80"),
                            EnrollmentId = new Guid("863458a7-3470-4e30-818b-19ca28495627")
                        },
                        new
                        {
                            Id = new Guid("055e065c-b253-457b-aa4f-625a0faf2a27"),
                            ActivityId = new Guid("8a0347cd-5c63-4098-b9ad-7140bb393c0b"),
                            EnrollmentId = new Guid("4dcfe6cb-3a43-4cef-ab3d-6764e6e22fa7")
                        },
                        new
                        {
                            Id = new Guid("347cd0de-f0b3-4ff7-9e3a-69dec64e62c2"),
                            ActivityId = new Guid("17fa9bcf-8116-4eae-84b4-a80ac90b528d"),
                            EnrollmentId = new Guid("652b0a04-7338-4b4e-843e-a70517bb4727")
                        },
                        new
                        {
                            Id = new Guid("b3d30626-e28d-4617-be41-236b51a14d3f"),
                            ActivityId = new Guid("17fa9bcf-8116-4eae-84b4-a80ac90b528d"),
                            EnrollmentId = new Guid("91199590-8525-41fc-ae14-cca705b280f9")
                        },
                        new
                        {
                            Id = new Guid("4eecb2a8-fac5-4a27-a8d2-1ce085615bf9"),
                            ActivityId = new Guid("77bab25a-95e0-4262-a9f4-2b995f4aab45"),
                            EnrollmentId = new Guid("2ffeb79b-5789-4de8-9590-aebbee14f35d")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("863458a7-3470-4e30-818b-19ca28495627"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("0260a65f-4587-43bb-944c-6da64323d71e")
                        },
                        new
                        {
                            Id = new Guid("4dcfe6cb-3a43-4cef-ab3d-6764e6e22fa7"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("04ecc741-2f31-4a63-afc6-08d94e889ec4")
                        },
                        new
                        {
                            Id = new Guid("652b0a04-7338-4b4e-843e-a70517bb4727"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("05875653-33d7-43b9-bba6-868a63d94044")
                        },
                        new
                        {
                            Id = new Guid("91199590-8525-41fc-ae14-cca705b280f9"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("05e0812e-55d2-4bce-b236-026da3a861f1")
                        },
                        new
                        {
                            Id = new Guid("2ffeb79b-5789-4de8-9590-aebbee14f35d"),
                            EnrollDay = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KidId = new Guid("062c57a7-e17b-41c1-91ef-997b3ff021f0")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0260a65f-4587-43bb-944c-6da64323d71e"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("04ecc741-2f31-4a63-afc6-08d94e889ec4"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("05875653-33d7-43b9-bba6-868a63d94044"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("05e0812e-55d2-4bce-b236-026da3a861f1"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Stackeetam",
                            FirstName = "Johan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Snow",
                            SecondName = "Enrique",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("062c57a7-e17b-41c1-91ef-997b3ff021f0"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Washinton",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("06c4e275-e8ef-45d5-bb3f-aa8d5bed5cf1"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Washinton",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("078a6c8c-6fe5-4a08-a58d-0446f1bedf60"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Worm",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("08edee74-5c00-4611-8a64-bfe4e7b72a50"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Worm",
                            SecondName = "Carlos",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("094751ab-cdb1-417b-905f-9b7b6a2391b2"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        },
                        new
                        {
                            Id = new Guid("09aac835-2105-4c3e-83b4-0b3cc3ba5e5c"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Lee",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            MotherName = "Snow",
                            SecondName = "Emilio",
                            TutorId = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c12f407f-c0c8-4533-99ae-3a698b046a1d"),
                            Description = "KPH"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6e6ea4a-290f-4d33-9ecc-214b4e2c22f9"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("95123897-c780-4b70-8a61-22dae8e6c893"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9073ca29-75b6-4458-bcdb-c28858e08fc1"),
                            Price = 1057m,
                            Reference = "SRV-8",
                            ActivityId = new Guid("17fa9bcf-8116-4eae-84b4-a80ac90b528d"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("5518ef4e-d930-4dbf-a025-397b0b679464"),
                            Price = 6080m,
                            Reference = "SRV-541",
                            ActivityId = new Guid("8a0347cd-5c63-4098-b9ad-7140bb393c0b"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("09d24c2d-5993-4ec2-b04b-866fcc2d82fd"),
                            Price = 9895m,
                            Reference = "SRV-205",
                            ActivityId = new Guid("372a27eb-caa8-4b7d-ad43-c6acda4cbc80"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("ca0318c2-d6d5-40e7-a614-d2ff45b2f9a3"),
                            Price = 418m,
                            Reference = "SRV-516",
                            ActivityId = new Guid("77bab25a-95e0-4262-a9f4-2b995f4aab45"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("197e306d-8e12-4f30-b61c-f857628ee227"),
                            Price = 3105m,
                            Reference = "SRV-817",
                            ActivityId = new Guid("20f84f55-799c-4952-b530-6fa9097d8d5f"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("a9827127-d429-4088-9b03-1f16e6680eda"),
                            Price = 2662m,
                            Reference = "SRV-422",
                            ActivityId = new Guid("45af3b8f-c30c-44ef-aaea-4585a6242d9d"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment", "Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
