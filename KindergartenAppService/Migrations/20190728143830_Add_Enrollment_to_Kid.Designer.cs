// <auto-generated />
using System;
using KindergartenAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KindergartenAppService.Migrations
{
    [DbContext(typeof(KindergarterContext))]
    [Migration("20190728143830_Add_Enrollment_to_Kid")]
    partial class Add_Enrollment_to_Kid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityTemplateId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ActivityTemplateId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fdf45aa-3573-4766-a83b-61ea24fa837d"),
                            ActivityTemplateId = new Guid("cc3fa6b3-2ce7-47c1-abeb-73694249ec08"),
                            Description = "Clases de ingles"
                        },
                        new
                        {
                            Id = new Guid("1ea2d94b-b07d-48a7-ae8b-cb3fb0de0a13"),
                            ActivityTemplateId = new Guid("18f11f7d-c6f3-4f32-9721-6bfc0fbe1bbb"),
                            Description = "Cuidade matutino"
                        },
                        new
                        {
                            Id = new Guid("2fab997b-0454-4dbd-ade5-893af8dcaa7d"),
                            ActivityTemplateId = new Guid("9bab709b-3d16-4b8b-a27f-2f02d21088e1"),
                            Description = "Cuidado Vespertino"
                        },
                        new
                        {
                            Id = new Guid("477aef3a-3b50-4c3a-b5a8-50e41b831439"),
                            ActivityTemplateId = new Guid("431ec10d-bf14-4773-958b-1b40434e95eb"),
                            Description = "Cuidado dia completo"
                        },
                        new
                        {
                            Id = new Guid("3646c0db-030c-44ae-b8dd-cbd419318c9e"),
                            ActivityTemplateId = new Guid("df564db2-39ec-4a0b-8d2a-bc474a0bfd1d"),
                            Description = "Clases de Ballet"
                        },
                        new
                        {
                            Id = new Guid("2fcb55d6-689d-4e2e-9fe1-bc28122dc5da"),
                            ActivityTemplateId = new Guid("216a05a2-5e05-44c2-a209-e2e01602beb3"),
                            Description = "Clases de logica"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("ActivityTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc3fa6b3-2ce7-47c1-abeb-73694249ec08"),
                            Description = "Clases de ingles",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        },
                        new
                        {
                            Id = new Guid("18f11f7d-c6f3-4f32-9721-6bfc0fbe1bbb"),
                            Description = "Cuidade matutino",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        },
                        new
                        {
                            Id = new Guid("9bab709b-3d16-4b8b-a27f-2f02d21088e1"),
                            Description = "Cuidado Vespertino",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        },
                        new
                        {
                            Id = new Guid("431ec10d-bf14-4773-958b-1b40434e95eb"),
                            Description = "Cuidado dia completo",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        },
                        new
                        {
                            Id = new Guid("df564db2-39ec-4a0b-8d2a-bc474a0bfd1d"),
                            Description = "Clases de Ballet",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        },
                        new
                        {
                            Id = new Guid("216a05a2-5e05-44c2-a209-e2e01602beb3"),
                            Description = "Clases de logica",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid?>("EnrollmentId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("EnrollActivity");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EnrollDay");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId")
                        .IsUnique();

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Feeding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Feeding");
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.Property<Guid>("KidId");

                    b.Property<Guid>("FeddingId");

                    b.HasKey("KidId", "FeddingId");

                    b.HasIndex("FeddingId");

                    b.ToTable("FeedingKid");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("Reference")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FatherName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("MotherName");

                    b.Property<string>("SecondName");

                    b.Property<Guid>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.HasIndex("TutorId");

                    b.ToTable("Kid");

                    b.HasData(
                        new
                        {
                            Id = new Guid("002e6a70-0bb9-4162-8c85-7c432b2f56db"),
                            FatherName = "Stackeetam",
                            FirstName = "Aaron",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "White",
                            SecondName = "Emilio",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("00773398-7b1c-41f1-b65b-a1dceec8e7a3"),
                            FatherName = "Lee",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Washinton",
                            SecondName = "Enrique",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("0132eb93-4d3d-4472-aca3-9f8a8d506234"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Snow",
                            SecondName = "Eduardo",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("03002be0-4f63-40bc-bb32-8734b843b35b"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "White",
                            SecondName = "Eduardo",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("04e7e1f3-9c90-4f89-adfb-eb837f135077"),
                            FatherName = "Faringtom",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Washinton",
                            SecondName = "Eduardo",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("06c7192c-0e6a-4cb5-b431-b8c79b52b0c5"),
                            FatherName = "Escobar",
                            FirstName = "Johan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Worm",
                            SecondName = "Emilio",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("090dbdab-11e9-417e-93a9-bc59322f2c34"),
                            FatherName = "Lee",
                            FirstName = "Johan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Washinton",
                            SecondName = "Emilio",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("0a8e5c8a-91bd-4e09-a87e-ccc717179aed"),
                            FatherName = "Stackeetam",
                            FirstName = "Johan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("0aad51f6-dc53-46b4-83d5-f2bbbb3ede8c"),
                            FatherName = "Escobar",
                            FirstName = "Dylan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "Worm",
                            SecondName = "Enrique",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        },
                        new
                        {
                            Id = new Guid("0cebdd70-cc57-4733-9311-c29e49b75b8f"),
                            FatherName = "Faringtom",
                            FirstName = "Lyan",
                            KindergarterId = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            MotherName = "White",
                            SecondName = "Enrique",
                            TutorId = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175")
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kindergarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Kindergarters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("531c3231-59b9-4d32-9e1d-ce003cd5b88b"),
                            Description = "Guarderia"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("ReceiptId");

                    b.HasKey("InvoiceId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KidId");

                    b.Property<DateTime>("PrecenseDay");

                    b.HasKey("Id");

                    b.HasIndex("KidId");

                    b.ToTable("Precense");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.Property<Guid>("StoreId");

                    b.Property<Guid>("ProductId");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<DateTime>("Date");

                    b.Property<TimeSpan>("EndingTime");

                    b.Property<TimeSpan>("StaringTime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivities");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail");

                    b.Property<string>("MovilNumber");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba9a51b0-c1eb-4cec-a94c-eb443c3d5175"),
                            FirstName = "Gregorio de Jesus",
                            LastName = "Rojas Acosta"
                        },
                        new
                        {
                            Id = new Guid("1396a498-0dc6-4f21-9f1a-abbe4be78adb"),
                            FirstName = "Yadira",
                            LastName = "Pinales Delgado"
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("KindergarterId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("KindergarterId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Product", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasBaseType("KindergartenAppService.Models.Item");

                    b.Property<Guid>("ActivityId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ServicePeriod");

                    b.HasIndex("ActivityId");

                    b.HasDiscriminator().HasValue("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b7d468d-857c-4380-ae8e-0b4dcd4a48ab"),
                            Price = 7412m,
                            Reference = "SRV-154",
                            ActivityId = new Guid("3fdf45aa-3573-4766-a83b-61ea24fa837d"),
                            Description = "Service Clases de ingles",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("c3b02f0d-1731-48b7-bef8-82dcb8ca6754"),
                            Price = 4252m,
                            Reference = "SRV-602",
                            ActivityId = new Guid("1ea2d94b-b07d-48a7-ae8b-cb3fb0de0a13"),
                            Description = "Service Cuidade matutino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("b59df544-c8f1-411a-8052-d3457fcf2fa3"),
                            Price = 814m,
                            Reference = "SRV-425",
                            ActivityId = new Guid("2fab997b-0454-4dbd-ade5-893af8dcaa7d"),
                            Description = "Service Cuidado Vespertino",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("e3913bcc-6648-4e70-bf09-631a46954f81"),
                            Price = 4824m,
                            Reference = "SRV-727",
                            ActivityId = new Guid("477aef3a-3b50-4c3a-b5a8-50e41b831439"),
                            Description = "Service Cuidado dia completo",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("16a01a55-2bcf-430d-a9ca-59cfac0786b8"),
                            Price = 1073m,
                            Reference = "SRV-353",
                            ActivityId = new Guid("3646c0db-030c-44ae-b8dd-cbd419318c9e"),
                            Description = "Service Clases de Ballet",
                            ServicePeriod = 77
                        },
                        new
                        {
                            Id = new Guid("ee5c2991-3737-49db-b596-06c187d857b0"),
                            Price = 9932m,
                            Reference = "SRV-779",
                            ActivityId = new Guid("2fcb55d6-689d-4e2e-9fe1-bc28122dc5da"),
                            Description = "Service Clases de logica",
                            ServicePeriod = 77
                        });
                });

            modelBuilder.Entity("KindergartenAppService.Models.Activity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.ActivityTemplate", "ActivityTemplate")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.ActivityTemplate", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("ActivityTemplates")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.EnrollActivity", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Enrollment")
                        .WithMany("EnrollActivities")
                        .HasForeignKey("EnrollmentId");
                });

            modelBuilder.Entity("KindergartenAppService.Models.Enrollment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithOne("Enrollment")
                        .HasForeignKey("KindergartenAppService.Models.Enrollment", "KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.FeedingKid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Feeding", "Fedding")
                        .WithMany("FeedingKids")
                        .HasForeignKey("FeddingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("FeedingKids")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Invoice", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany()
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.InvoiceDetail", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KindergartenAppService.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Kid", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Kids")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Tutor", "Tutor")
                        .WithMany("Kids")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.MedicalRecord", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Payment", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Receipt", "Receipt")
                        .WithMany("Payments")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Precense", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kid", "Kid")
                        .WithMany("Precenses")
                        .HasForeignKey("KidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Stock", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KindergartenAppService.Models.Store", "Store")
                        .WithMany("Stock")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.SubActivities", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.User", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Kindergarter", "Kindergarter")
                        .WithMany("Users")
                        .HasForeignKey("KindergarterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KindergartenAppService.Models.Service", b =>
                {
                    b.HasOne("KindergartenAppService.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
